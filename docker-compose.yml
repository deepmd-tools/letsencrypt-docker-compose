version: "2"

services:
  nginx:
    build: ./nginx
    image: evgeniy-khyst/nginx
    env_file:
      - ./config.env
    volumes:
      - nginx_conf:/etc/nginx/sites
      - nginx_ssl:/etc/nginx/ssl
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
      - ./html:/var/www/html
    ports:
      - "80:80"
      - "443:443"
    restart: always

  certbot:
    build: ./certbot
    image: evgeniy-khyst/certbot
    env_file:
      - ./config.env
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
    depends_on:
      - nginx

  cron:
    build: ./cron
    image: evgeniy-khyst/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    depends_on:
      - nginx
      - certbot
  viewer:
    image: ohif/viewer:v1.x
    container_name: viewer
    depends_on:
      - mongo
      - orthanc
    restart: always
    networks:
      - frontend
      - backend
#    ports:
#      - 3000:3000
    links:
      - mongo
    environment:
      - MONGO_URL=${MONGO_URL:-mongodb://mongo:27017/ohif}
    volumes:
      - ${VIEWER_CONFIG:-viewer.json}:/app/app.json:ro

  mongo:
    image: mongo:4.0.14
    container_name: mongo
    networks:
      - backend
#    ports:
#      - ${MONGO_PORT:-27017}:27017
    volumes:
      - ${MONGO_DATA:-./mongo_data}:/data/db

  orthanc:
    image: jodogne/orthanc-plugins:1.5.8
    container_name: orthanc
    depends_on:
      - postgres
    restart: always
    networks:
      - frontend
      - backend
#    ports:
#      - ${ORTHANC_DICOM_PORT:-4242}:4242
#      - ${ORTHANC_HTTP_PORT:-8042}:8042
    volumes:
      
      - ${ORTHANC_DB:-./orthanc_db}:/var/lib/orthanc/db
      - ${ORTHANC_CONFIG:-orthanc.json}:/etc/orthanc/orthanc.json:ro
    environment:
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-pgpassword}
      - PGDATA=${PGDATA:-/var/lib/postgresql/data}
      - POSTGRES_DB=orthanc

  postgres:
    image: postgres:12.1
    container_name: postgres
    networks:
      - backend
#    ports:
#      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - ${POSTGRES_DATA_MNT:-/pg_data/data}:${PGDATA:-/var/lib/postgresql/data}
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-pgpassword}
      - PGDATA=${PGDATA:-/var/lib/postgresql/data}
      - POSTGRES_DB=orthanc

volumes:
  nginx_conf:
  nginx_ssl:
    external: true
  letsencrypt_certs:
    external: true
  certbot_acme_challenge:
